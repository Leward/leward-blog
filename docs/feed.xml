<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Paul-Julien Vauthier</title>
    <description>{&quot;fr&quot;=&gt;&quot;Site web personnel à propos de mon travail en tant que Développer et Consultant IT , de vélo en tant que hobby, et de mon déménagement à venir à Singapour.&quot;, &quot;en&quot;=&gt;&quot;Personnal website about my job as an IT Consultant and Developer, casual Cycling and my relocation to Singapore.&quot;, &quot;de&quot;=&gt;&quot;Persönlich Website über meinen Job als einen IT-Berater und Softwareentwickler, Radfahren und meinen Umzug nach Singapur.&quot;, &quot;jp&quot;=&gt;&quot;じょうほうテクノロジー と じてんしゃ　と　シンガポール についての私のブログ.&quot;}</description>
    <link>http://yourdomain.com/</link>
    <atom:link href="http://yourdomain.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 09 Feb 2020 07:02:50 +0800</pubDate>
    <lastBuildDate>Sun, 09 Feb 2020 07:02:50 +0800</lastBuildDate>
    <generator>Jekyll v3.8.6</generator>
    
      <item>
        <title>Snapshot Testing with JavaFX</title>
        <description>&lt;p&gt;A few months ago, I was doing some iOS development and got to discover a way to test the rendering of UIs: Snapshot testing. The premise is that regular Unit or End-to-End tests don’t do a great job at testing how the app renders.&lt;/p&gt;

&lt;p&gt;Snapshot Testing is a technique where you don’t rely on usual assertions. Instead, you validate, as a human, how the app renders (the snapshot) and save it alongside the source code. Unless you expect a visual difference in you screen, the snapshot should remain the same.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Since I decided to take back on some JavaFX, I decided to apply the same technique on my JavaFX work.&lt;/p&gt;

&lt;h1 id=&quot;taking-a-snapshot&quot;&gt;Taking a Snapshot&lt;/h1&gt;

&lt;p&gt;The following snippet shows you how to take a snapshot for a given &lt;a href=&quot;https://openjfx.io/javadoc/13/javafx.graphics/javafx/scene/Scene.html&quot;&gt;Scene&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;screenshot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Scene&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scene&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;screenshotName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;writableImage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;WritableImage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scene&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getWidth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scene&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getHeight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;scene&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;snapshot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;writableImage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;BufferedImage&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bufferedImage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SwingFXUtils&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fromFXImage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;writableImage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;outfile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;snapshots/%s.png&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;screenshotName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;ImageIO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bufferedImage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;png&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;outfile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;/assets/2020-02-02-EN-snapshot-testing-with-javafx/drawing-pane-1.png&quot;&gt;&lt;img src=&quot;/assets/2020-02-02-EN-snapshot-testing-with-javafx/drawing-pane-1.png&quot; alt=&quot;Snapshot of the Drawing Pane&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Snapshot of the Drawing Pane&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&quot;testing-javafx&quot;&gt;Testing JavaFX&lt;/h1&gt;

&lt;p&gt;In this example I’ll be using JUnit 5, with &lt;a href=&quot;https://github.com/TestFX/TestFX&quot;&gt;TestFX&lt;/a&gt; to test the JavaFX code. Note that my project is a Maven project, setup for Gradle may differ.&lt;/p&gt;

&lt;p&gt;TestFX will take care of the setup required to run tests for JavaFX.&lt;/p&gt;

&lt;p&gt;Something I appreciate about TestFX lies in their &lt;a href=&quot;https://github.com/TestFX/TestFX/blob/master/README.md&quot;&gt;README&lt;/a&gt;. It has examples for different versions of Java. It also covers different test and assertion libraries. This is a great “Getting Started” experience!&lt;/p&gt;

&lt;h2 id=&quot;jigsaw--module-hiccups&quot;&gt;Jigsaw / Module Hiccups&lt;/h2&gt;

&lt;p&gt;Running a modular JavaFX application with Java 13 I ran into a few hiccups when running my tests.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;java.lang.IllegalAccessError: class org.testfx.toolkit.impl.ToolkitServiceImpl (in unnamed module @0x7dcf94f8) cannot access class com.sun.javafx.application.ParametersImpl (in module javafx.graphics) because module javafx.graphics does not export com.sun.javafx.application to unnamed module @0x7dcf94f8
	org.testfx.toolkit.impl.ToolkitServiceImpl.registerApplicationParameters(ToolkitServiceImpl.java:142)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This can be “fixed” by opening the module when launching the program with &lt;code class=&quot;highlighter-rouge&quot;&gt;--add-exports javafx.graphics/com.sun.javafx.application=ALL-UNNAMED&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Then I ran into a different error:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;java.lang.reflect.InaccessibleObjectException: Unable to make void fr.leward.graphdesigner.ui.drawingpane.DrawingPaneSnapshotTest.testSomething() accessible: module graph.designer.drawing.pane does not &quot;opens fr.leward.graphdesigner.ui.drawingpane&quot; to unnamed module @5f9b2141
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Which I fixed by adding the launch option &lt;code class=&quot;highlighter-rouge&quot;&gt;--add-opens graph.designer.drawing.pane/fr.leward.graphdesigner.ui.drawingpane=ALL-UNNAMED&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Later on, while implementing my &lt;code class=&quot;highlighter-rouge&quot;&gt;Snapshot&lt;/code&gt; utility class I ran into some more trouble:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;java.lang.IllegalAccessError: 
class fr.leward.graphdesigner.ui.drawingpane.Snapshot (in module graph.designer.drawing.pane) 
	cannot access class javax.imageio.ImageIO (in module java.desktop) 
	because module graph.designer.drawing.pane does not read module java.desktop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Which could be fixed by adding &lt;code class=&quot;highlighter-rouge&quot;&gt;--add-reads graph.designer.drawing.pane=java.desktop&lt;/code&gt; to the launch options.&lt;/p&gt;

&lt;p&gt;I can now run &lt;code class=&quot;highlighter-rouge&quot;&gt;mvn test&lt;/code&gt;. IntelliJ integrates well with Maven and will pickup the launch options I specified in my &lt;code class=&quot;highlighter-rouge&quot;&gt;pom.xml&lt;/code&gt; :&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.apache.maven.plugins&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;maven-surefire-plugin&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;3.0.0-M4&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;argLine&amp;gt;&lt;/span&gt;
      --add-reads graph.designer.drawing.pane=java.desktop
      --add-exports javafx.graphics/com.sun.javafx.application=ALL-UNNAMED
      --add-opens graph.designer.drawing.pane/fr.leward.graphdesigner.ui.drawingpane=ALL-UNNAMED
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/argLine&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;snapshot-testing&quot;&gt;Snapshot Testing&lt;/h1&gt;

&lt;p&gt;I implemented a small utility class that allows me to save the snapshot of a scene and compare it with an earlier snapshot.&lt;/p&gt;

&lt;p&gt;If the two snapshot differ, the test fails and the developer can compare the two images and verify whether the change was expected or not.&lt;/p&gt;

&lt;p&gt;Below, you can find the implementation I went with.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;leward&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;graphdesigner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ui&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;drawingpane&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javafx.embed.swing.SwingFXUtils&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javafx.scene.Scene&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javafx.scene.image.Image&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.imageio.ImageIO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.io.File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.io.IOException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;assertj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;core&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Assertions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fail&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Snapshot&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Scene&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scene&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Image&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;snapshot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Snapshot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Scene&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scene&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;scene&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scene&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;snapshot&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scene&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;snapshot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;saveSnapshot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bufferedImage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SwingFXUtils&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fromFXImage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;snapshot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;ImageIO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bufferedImage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;png&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getSnapshotFile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;saveDebugSnapshot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bufferedImage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SwingFXUtils&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fromFXImage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;snapshot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;ImageIO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bufferedImage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;png&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getDebugSnapshotFile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;assertSnapshotRemainsUnchanged&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;Image&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;previousSnapshot&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getSavedSnapshot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;snapshot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getWidth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;previousSnapshot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getWidth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;snapshot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getHeight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;previousSnapshot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getHeight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;fail&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;The two snapshots are not of the same size&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;snapshot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getWidth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;snapshot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getHeight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;snapshot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getPixelReader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getArgb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;previousSnapshot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getPixelReader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getArgb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;fail&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Current snapshot differs from save snapshot&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Image&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getSavedSnapshot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Image&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;file:%s&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getSnapshotFilePath&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()));&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getSnapshotFile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getSnapshotFilePath&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getSnapshotFilePath&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;snapshots/%s.png&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getDebugSnapshotFile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;snapshots/%s.debug.png&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And to write a Snapshot Test:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;leward&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;graphdesigner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ui&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;drawingpane&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;fr.leward.graphdesigner.core.IdGenerator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javafx.scene.Scene&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javafx.stage.Stage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.junit.jupiter.api.Test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.testfx.framework.junit5.ApplicationTest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.io.IOException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.concurrent.atomic.AtomicInteger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DrawingPaneSnapshotTest&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ApplicationTest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DrawingPane&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;drawingPane&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Scene&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scene&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Snapshot&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;snapshot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;cm&quot;&gt;/**
		* Will be called with {@code @Before} semantics, i. e. before each test method.
		*/&lt;/span&gt;
	&lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Stage&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nc&quot;&gt;AtomicInteger&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nextID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;AtomicInteger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;nc&quot;&gt;IdGenerator&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;generator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;nextID:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;incrementAndGet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;drawingPane&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DrawingPane&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;generator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

		&lt;span class=&quot;n&quot;&gt;scene&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Scene&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;drawingPane&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;400&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;400&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;stage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setScene&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scene&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;testSnapshot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;interact&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;drawingPane&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addNode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;drawingPane&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addNode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;drawingPane&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addNode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;90&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;160&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

			&lt;span class=&quot;n&quot;&gt;drawingPane&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addRelationship&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;drawingPane&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addRelationship&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

			&lt;span class=&quot;n&quot;&gt;snapshot&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Snapshot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scene&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;drawing-pane-1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;// snapshot.saveSnapshot(); // Uncomment to save and register an expected change&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;snapshot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;saveDebugSnapshot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;snapshot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;assertSnapshotRemainsUnchanged&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;


&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Note that all the JavaFX interactions have to be made from the JavaFX thread, hence the use of &lt;code class=&quot;highlighter-rouge&quot;&gt;interact()&lt;/code&gt;.&lt;/p&gt;

&lt;h1 id=&quot;links&quot;&gt;Links&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.codefx.org/java/five-command-line-options-hack-java-module-system/&quot;&gt;Five Command Line Options To Hack The Java Module System&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://winterbe.com/posts/2018/08/29/migrate-maven-projects-to-java-11-jigsaw/&quot;&gt;Migrate Maven Projects to Java 11&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://sqa.stackexchange.com/questions/29696/what-is-snapshot-testing&quot;&gt;What is Snapshot Testing?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 02 Feb 2020 17:29:00 +0800</pubDate>
        <link>http://yourdomain.com/2020/02/02/snapshot-testing-with-javafx.html</link>
        <guid isPermaLink="true">http://yourdomain.com/2020/02/02/snapshot-testing-with-javafx.html</guid>
        
        
      </item>
    
      <item>
        <title>Reviving an old Jekyll Blog thanks to Docker</title>
        <description>&lt;p&gt;I don’t know if I have any regular reader. Yet, I know I am not a regular writer and only publish to this blog from time to time.&lt;/p&gt;

&lt;p&gt;I recently tried to publish an article about Java modules. I had difficulties rebuilding the blog using the &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll build&lt;/code&gt; command. Quite some time has passed since my last publication and Jekyll had a few breaking changes.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;I could have installed an older version of Jekyll on my system. I find this option quite troublesome. In the end, I decided to use Docker. It allows to “simply” use an old version of Jekyll no matter what I have installed on my local system (besides Docker).&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Run
docker run -ti \
	-p 4000:4000 \
	-v $(pwd):/srv/jekyll \
	jekyll/jekyll:3 jekyll serve

# Build
docker run -ti \
	-v $(pwd):/srv/jekyll \
	jekyll/jekyll:3 jekyll build
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It’s not as simple as &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll run&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll build&lt;/code&gt;. However it is more reproducible. Conveniently hidden in a &lt;code class=&quot;highlighter-rouge&quot;&gt;[run.sh](http://run.sh)&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;[build.sh](http://build.sh)&lt;/code&gt; scripts, it becomes painless to use them.&lt;/p&gt;
</description>
        <pubDate>Tue, 21 Jan 2020 11:49:00 +0800</pubDate>
        <link>http://yourdomain.com/2020/01/21/reviving-an-old-jekyll-blog-docker.html</link>
        <guid isPermaLink="true">http://yourdomain.com/2020/01/21/reviving-an-old-jekyll-blog-docker.html</guid>
        
        
      </item>
    
      <item>
        <title>Java Modules with JavaFX, Slf4j, Logback and jlink</title>
        <description>&lt;p&gt;I recently tried to upgrade an old JavaFX application I had as a side-project to a more recent version of Java: Java 13 at the time of writing this.&lt;/p&gt;

&lt;p&gt;Most of my work with Java so far was on Java 8. I hardly did the switch to Java 9+ besides keeping informed by reading some articles on the matter (&lt;a href=&quot;https://www.baeldung.com/&quot;&gt;Baeldung&lt;/a&gt; and &lt;a href=&quot;https://blog.jetbrains.com/idea/tag/java-annotated/&quot;&gt;Java Annotated&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;One of the issues I had during the migration was to use &lt;a href=&quot;https://blog.codefx.org/java/java-module-system-tutorial/&quot;&gt;Java modules&lt;/a&gt; and produce a runtime image with &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/tools/jlink.html&quot;&gt;jlink&lt;/a&gt;.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h1 id=&quot;module-infojava&quot;&gt;module-info.java&lt;/h1&gt;

&lt;p&gt;I wanted to have the following &lt;code class=&quot;highlighter-rouge&quot;&gt;module-info.java&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;module graph.designer {
    requires javafx.controls;
    requires javafx.fxml;
    requires org.slf4j;

    opens fr.leward.graphdesigner to javafx.fxml;
    exports fr.leward.graphdesigner;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;build-with-jlink&quot;&gt;Build with jlink&lt;/h1&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mvn javafx:run&lt;/code&gt; would run just fine. However &lt;code class=&quot;highlighter-rouge&quot;&gt;mvn javafx:jlink&lt;/code&gt; returned the following error:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Error: automatic module cannot be used with jlink: org.slf4j from file:///home/leward/.m2/repository/org/slf4j/slf4j-api/1.7.30/slf4j-api-1.7.30.jar
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;What happens here is slf4j-api in its version 1.7.30 is not a native java module. It worked with the simple run command because Java automatically converts jars into java modules. However jlink is more particular about it and only want proper Java modules.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: do not confuse Java modules and Maven modules. They have the same name but are different things.&lt;/p&gt;

&lt;h1 id=&quot;the-fix&quot;&gt;The fix&lt;/h1&gt;

&lt;p&gt;The fix was to simply go for a more recent version, which at the time of writing are not yet stable.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;org.slf4j&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;slf4j-api&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;2.0.0-alpha1&amp;lt;/version&amp;gt; &amp;lt;!-- 01-Oct-2019 --&amp;gt;
&amp;lt;/dependency&amp;gt;

&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;ch.qos.logback&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;logback-classic&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;1.3.0-alpha5&amp;lt;/version&amp;gt; &amp;lt;!-- 22-Oct-2019 --&amp;gt;
    &amp;lt;scope&amp;gt;runtime&amp;lt;/scope&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Even though though are Alpha versions, slf4j and logback projects are not known for easily breaking compatibilities. So if you want to use them for small projects you don’t risk much. For critical enterprise software it’s a different story…&lt;/p&gt;

&lt;p&gt;Now I can build with &lt;code class=&quot;highlighter-rouge&quot;&gt;mvn javafx:jlink&lt;/code&gt; and run the generated image (&lt;code class=&quot;highlighter-rouge&quot;&gt;target/graph-designer/launcher&lt;/code&gt;). You can read more about this on the &lt;a href=&quot;https://openjfx.io/openjfx-docs/#modular&quot;&gt;OpenJFX Getting Started Guide&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Mon, 20 Jan 2020 05:35:00 +0800</pubDate>
        <link>http://yourdomain.com/2020/01/20/java-module-slf4j-jlink-javafx.html</link>
        <guid isPermaLink="true">http://yourdomain.com/2020/01/20/java-module-slf4j-jlink-javafx.html</guid>
        
        
      </item>
    
      <item>
        <title>Using Nix on Linux Mint</title>
        <description>&lt;h2 id=&quot;using-nix-on-linux-mint&quot;&gt;Using Nix on Linux Mint&lt;/h2&gt;

&lt;p&gt;If you are currently happy with you package manager and installation, it is likely that you don’t need Nix (need as vital need). However, Nix will provide you with some nice additions:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Atomic upgrades and rollback&lt;/li&gt;
  &lt;li&gt;Multi-user package management: the packages I install or remove do not affect other users&lt;/li&gt;
  &lt;li&gt;Allowing multiple versions of a package to be installed&lt;/li&gt;
  &lt;li&gt;Setup of specific build environments (hello developers and Docker)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you find enough benefits in those Nix features, a migration may be worthwhile.&lt;/p&gt;

&lt;p&gt;Nix defines itself as a purely functional package manager. Here functional is to be understood as per the principles of &lt;a href=&quot;https://www.keycdn.com/blog/functional-programming&quot;&gt;functional programming&lt;/a&gt;. Immutability, absence of side-effect and pure functions are elements of functional programming which allows Nix to have similar properties as a package manager.&lt;/p&gt;

&lt;p&gt;Upgrading to a newer version of Linux Mint, I decided to give Nix a try and write a follow-up blog post.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;installation&quot;&gt;Installation&lt;/h2&gt;

&lt;p&gt;To install Nix, run the following command (this is the &lt;a href=&quot;https://nixos.org/nix/manual/#sect-multi-user-installation&quot;&gt;multi-user installation&lt;/a&gt;):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sh &amp;lt;(curl https://nixos.org/nix/install) --daemon
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Always be careful when you install a downloaded script with &lt;code class=&quot;highlighter-rouge&quot;&gt;curl&lt;/code&gt;. Verify the source is trusted, and do not hesitate to review the installation script.&lt;/p&gt;

&lt;p&gt;I like that the installation process tries its best being transparent about the different steps it is performing.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: there are two installation mode available: multi-user and single-user. In general multi-user is better and will let all the user of the systems use nix. However packages that you install as a user are not made available to the other users.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In the future, it may not be necessary to run this script as nix is &lt;a href=&quot;https://ftp-master.debian.org/new/nix_2.2.1-2.html&quot;&gt;now available on Debian&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;uninstall&quot;&gt;Uninstall&lt;/h2&gt;

&lt;p&gt;If you play with Nix and would like to remove it, this can be done easily and cleanly. This means you can give Nix a try without risking creating havoc in your system.&lt;/p&gt;

&lt;p&gt;Installing Nix is a matter of downloading and running a script. Uninstalling means undo whatever the script has done.&lt;/p&gt;

&lt;p&gt;I advise to &lt;a href=&quot;https://nixos.org/nix/manual/#sect-multi-user-installation&quot;&gt;refer to the manual&lt;/a&gt;, as multiple steps are required and they may change over time.&lt;/p&gt;

&lt;h2 id=&quot;common-commands&quot;&gt;Common Commands&lt;/h2&gt;

&lt;p&gt;Searching for a package: &lt;code class=&quot;highlighter-rouge&quot;&gt;nix search packagename&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Installing a package: &lt;code class=&quot;highlighter-rouge&quot;&gt;nix-env -i packagename&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Removing a package: &lt;code class=&quot;highlighter-rouge&quot;&gt;nix-env -e packagename&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;List installed packages: &lt;code class=&quot;highlighter-rouge&quot;&gt;nix-env -q&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Upgrade packages: &lt;code class=&quot;highlighter-rouge&quot;&gt;nix-env -u&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;caveats&quot;&gt;Caveats&lt;/h2&gt;

&lt;h3 id=&quot;nemo--dropbox&quot;&gt;Nemo &amp;amp; Dropbox&lt;/h3&gt;

&lt;p&gt;I use Dropbox to sync my documents between devices. Dropbox and its Nemo integration are not available. You can still install it using the Mint Software Manager.&lt;/p&gt;

&lt;h3 id=&quot;entries-in-the-start-menu&quot;&gt;Entries in the start menu&lt;/h3&gt;

&lt;p&gt;Entries in the desktop menu are not added. For this to work you need to configure the &lt;code class=&quot;highlighter-rouge&quot;&gt;XDG_DATA_DIR&lt;/code&gt; environment variable. You can add to your &lt;code class=&quot;highlighter-rouge&quot;&gt;.profile&lt;/code&gt; file:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;export XDG_DATA_DIRS=$HOME/.nix-profile/share/applications:&quot;${XDG_DATA_DIRS:-/usr/local/share/:/usr/share/}&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Still doing so, does not make the entry appear after installing a new package with &lt;code class=&quot;highlighter-rouge&quot;&gt;nix-env -i&lt;/code&gt;. However at the next restart, the entry is there. If you open the menu editor you should also see the icon&lt;/p&gt;

&lt;h3 id=&quot;nix-for-other-users&quot;&gt;Nix for other users&lt;/h3&gt;

&lt;p&gt;Logging-in as a different user, &lt;code class=&quot;highlighter-rouge&quot;&gt;nix&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;nix-env&lt;/code&gt; may not be immediately  available. Running &lt;code class=&quot;highlighter-rouge&quot;&gt;source /etc/profile&lt;/code&gt; should resolve it.&lt;/p&gt;

&lt;h2 id=&quot;running-two-versions-side-by-side&quot;&gt;Running two versions side-by-side&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;TL;DR;&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;At runtime, only one version of a package can be present&lt;/li&gt;
  &lt;li&gt;Use nix-shell for your builds&lt;/li&gt;
  &lt;li&gt;Nix default channel (nixpkgs) does not keep, nor allow you to reference a particular version of a library or application&lt;/li&gt;
  &lt;li&gt;Nix works great to setup the build environment, but won’t do a better job for the dependencies of your application if the ecosystem you are working already has some build and dependency management systems&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Nix is said to allow to have several installations of a package installed. Let’s try it:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ nix-env -i ruby
installing 'ruby-2.6.1'

$ ruby -v
ruby 2.6.1p33 (2019-01-30) [x86_64-linux]

$ nix-env -iA nixpkgs.ruby_2_3
replacing old 'ruby-2.6.1'
installing 'ruby-2.3.8'

$ ruby -v
ruby 2.3.8p459 (2018-10-18) [x86_64-linux]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;What has happened here? The first installation of ruby is quite straightforward and works as expected. Where things are a little bit trickier is when installing an older version of ruby.&lt;/p&gt;

&lt;p&gt;To install ruby 2.3 we had to add the &lt;code class=&quot;highlighter-rouge&quot;&gt;-A&lt;/code&gt; option and specify the package name as &lt;code class=&quot;highlighter-rouge&quot;&gt;nixpkgs.ruby_2_3&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The following two commands are similar (as long as &lt;code class=&quot;highlighter-rouge&quot;&gt;nixpkgs.ruby_2_3&lt;/code&gt; points to the version 2.3.8 of ruby):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;nix-env -iA nixpkgs.ruby_2_3&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;nix-env -i ruby-2.3.8&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;However note that running &lt;code class=&quot;highlighter-rouge&quot;&gt;nix-env -i ruby-2.3.7&lt;/code&gt; does not work, because that version is not targeted by any nix package. The versions which work are the ones returned one running &lt;code class=&quot;highlighter-rouge&quot;&gt;nix-env -qa ruby&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;General rule of thumb is to install with &lt;code class=&quot;highlighter-rouge&quot;&gt;niv-env -i&lt;/code&gt; only applications that you want to be available globally for a particular user. As a developer, to make the most of out of nix, you will need to create your own nix expressions in order to ensure your build are replicable using &lt;code class=&quot;highlighter-rouge&quot;&gt;nix-shell&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The philosophy in Nix is not to pinpoint to a specific version of a library or application, but to have a set dependencies which can be easily reproduced between environment. &lt;a href=&quot;https://github.com/NixOS/nixpkgs/issues/9682#issuecomment-138105069&quot;&gt;Multiple versions are kept in nixpkgs (default Nix package repository) if there is a good reason to&lt;/a&gt;. This does not mean you can’t do it, there are ways of doing it, playing with nix channels, but I would not consider it to be straightforward.&lt;/p&gt;

&lt;p&gt;For this reasons, nix is not always ideal, nor the silver bullet for developers needing to troubleshot and target a specific version.&lt;/p&gt;

&lt;p&gt;Also here in our example, ruby2.6 has disappeared from the list when you run &lt;code class=&quot;highlighter-rouge&quot;&gt;nix-env -q&lt;/code&gt;. For a given package, only one can be resolved at runtime. If you need ruby 2.3 for a specific build, nix-shell is there for that purpose. It creates a shell with all the required dependencies to run the build.&lt;/p&gt;

&lt;p&gt;Nix-shell is more useful when you need system libraries to be present such as when working in C. This is a bit less the case when you are already using a build and package manager such as Maven for Java, Cargo for Rust, NPM for Javascript.&lt;/p&gt;

&lt;p&gt;As a developer if I need to do some troubleshooting on a particular version of Ruby, a tool such as &lt;a href=&quot;https://rvm.io/&quot;&gt;RVM&lt;/a&gt; may be more appropriate.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;I am a fairly beginner with Nix and wanted to give it try as it is quite different from the traditional system package managers.&lt;/p&gt;

&lt;p&gt;To make it work nicely with Linux Mint from a desktop user perspective, a few minor adjustment were needed, but overall the experience is pleasant.&lt;/p&gt;

&lt;p&gt;Nix works great for my use case of installing applications globally on my system.  Is it significantly better than the package manager which shipped with my distribution? To the level I am using it, a bit, but not significantly. I can find in Nix packages which are not yet available in the main Mint repositories or newer versions.&lt;/p&gt;

&lt;p&gt;As a developer to manage things like my versions of Java and Ruby, Rust, I will stick to tools such as &lt;a href=&quot;https://sdkman.io/&quot;&gt;SDKMAN&lt;/a&gt; and &lt;a href=&quot;https://rvm.io/&quot;&gt;rvm&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If I were to work on C or C++ projects, I’d probably find more value to Nix for my builds. As a Java developer for example, you mostly need the JDK and Maven installed.&lt;/p&gt;

&lt;p&gt;If you are a bit more curious, did you there was a Linux distribution called &lt;a href=&quot;https://nixos.org/&quot;&gt;NixOS&lt;/a&gt;? There is also a series of introduction posts to Nix called &lt;a href=&quot;https://nixos.org/nixos/nix-pills/index.html&quot;&gt;Nix Pills&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;When I finished writing this blog post, here are the packages I have installed (I just reinstalled my system):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ nix-env -q
bat-0.9.0
git-2.19.2
htop-2.2.0
idea-ultimate-2018.3.4
jekyll-3.8.5
jq-1.6
keepassx2-2.0.3
openttd-1.8.0
vscode-1.30.2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I am only scratching the surface on this topic. The next step for me will be to write my first &lt;a href=&quot;https://nixos.org/nix/manual/#chap-writing-nix-expressions&quot;&gt;Nix expressions&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Sun, 10 Feb 2019 05:35:00 +0800</pubDate>
        <link>http://yourdomain.com/2019/02/10/using-nix-on-linux-mint.html</link>
        <guid isPermaLink="true">http://yourdomain.com/2019/02/10/using-nix-on-linux-mint.html</guid>
        
        
      </item>
    
      <item>
        <title>Notes on Diesel, a Rust ORM</title>
        <description>&lt;p&gt;Lately &lt;a href=&quot;https://twitter.com/pj_Leward/status/1005856316840030208&quot;&gt;I have been playing around&lt;/a&gt; and enjoyed learning about the Rust programming. Today I spend some time working with &lt;a href=&quot;http://diesel.rs/&quot;&gt;Diesel&lt;/a&gt;, a Rust ORM.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;schema-generation&quot;&gt;Schema generation&lt;/h2&gt;

&lt;p&gt;Diesel uses a schema definition (usually called &lt;code class=&quot;highlighter-rouge&quot;&gt;schema.rs&lt;/code&gt;) to ensure the type-safety of its API.&lt;/p&gt;

&lt;p&gt;When started such a project there are usually two options:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Everything is brand new, there is no existing database 
 -&amp;gt; the dabase can be generated from the data types used in the program&lt;/li&gt;
  &lt;li&gt;Writing a program for an existing database -&amp;gt; you don’t necessarily want an exact 1:1 mapping of 
 the DB schema into your code. For many reasons there may be a lot of things your application does not care about in the DB schema&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;As I have an existing database, I generated my schema using the &lt;code class=&quot;highlighter-rouge&quot;&gt;diesel print-schema&lt;/code&gt; command. 
The command dumps the DB structure into my &lt;code class=&quot;highlighter-rouge&quot;&gt;schema.rs&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Don’t forget to add the generated &lt;code class=&quot;highlighter-rouge&quot;&gt;schema&lt;/code&gt; module to your &lt;code class=&quot;highlighter-rouge&quot;&gt;main.rs&lt;/code&gt; using &lt;code class=&quot;highlighter-rouge&quot;&gt;mod schema;&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;schema-mapping&quot;&gt;Schema Mapping&lt;/h2&gt;

&lt;p&gt;The second step is to create the structs corresponding to your shema.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;schema.rs:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;table!&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;cover&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Int8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;// version -&amp;gt; Int8,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Varchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Varchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;cover.rs:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;diesel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Queryable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;#[derive(Queryable,&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;Clone)]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Cover&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;i64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Note that in my schema I commented out the &lt;code class=&quot;highlighter-rouge&quot;&gt;version&lt;/code&gt; column. Indeed, at this current stage, I don’t really care about that field.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If a field is in your &lt;code class=&quot;highlighter-rouge&quot;&gt;schema.rs&lt;/code&gt;, it should be in your struct as well. If the field is not in the struct, requests will have to specify all the columns every time, which is a bit cumbersome.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Make sure the order of the fields in your schema and your struct is the same. Diesel does its mapping using tuples, so the order of the fields matters.&lt;/p&gt;

&lt;h2 id=&quot;the-connection-to-the-db&quot;&gt;The connection to the DB&lt;/h2&gt;

&lt;p&gt;If you are working in a simple use case, a single connection to the database may be enough. 
However, if your application is expected to issue multiple requests concurrently, it is recommended to use a pool of connections.&lt;/p&gt;

&lt;p&gt;I used the following libraries to help me with the creation of my pool of connections:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://crates.io/crates/lazy_static&quot;&gt;lazy_static&lt;/a&gt;: allows to define global constants computed at runetime&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://crates.io/crates/r2d2&quot;&gt;r2d2&lt;/a&gt;: a generic connection pool library&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://crates.io/crates/r2d2-diesel&quot;&gt;r2d2-diesel&lt;/a&gt;: support for diesel connection pool&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The snippet below is heavily inspired from a snippet a saw somewhere else, I just can’t recall where it was…&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;database.rs&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;diesel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;pg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PgConnection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;r2d2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Pool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PooledConnection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;r2d2_diesel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ConnectionManager&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;// Type aliases to simplify a bit the types&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PostgresPool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Pool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ConnectionManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PgConnection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PostgresPooledConnection&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PooledConnection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ConnectionManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PgConnection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;// Using lazy static to have a global reference to my connection pool&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;// However, I feel that for testing/mocking this won't be great.&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;lazy_static!&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ref&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;POOL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PostgresPool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;init_pool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;init_pool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PostgresPool&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;// I chose configuration via an environment variable&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;database_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;DATABASE_URL&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;DATABASE_URL must be set&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;manager&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;ConnectionManager&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PgConnection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;database_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nn&quot;&gt;Pool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;.build&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;manager&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;.expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Failed to create pool.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;// Unrecoverable failure!&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;/// Get a connection from a static pool of connections&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_pooled_connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PostgresPooledConnection&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;POOL&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.clone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;database_connection&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Failed to get pooled connection&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;// Not sure when a panic is triggered here&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;database_connection&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;simple-query&quot;&gt;Simple Query&lt;/h2&gt;

&lt;p&gt;This is how you can then make a query using Diesel:&lt;/p&gt;

&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_pooled_connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;list_covers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Vec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Cover&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;schema&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cover&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;connection&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;*&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get_pooled_connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;nn&quot;&gt;cover&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Error loading covers&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;joining&quot;&gt;Joining&lt;/h2&gt;

&lt;p&gt;Let’s have a look at a slightly more complex example involving 2 tables which needs to be joined. 
The snippet below fetches the 5 latest news.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;schema.rs&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;table!&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;cover&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Int8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Varchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Varchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;table!&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;news&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Int8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Nullable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Timestamp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Varchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cover_id&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Int8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;joinable!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;news&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;cover&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cover_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;// Materialize a assiocation and a foreign key&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;allow_tables_to_appear_in_same_query!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cover&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;news&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;news.rs&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;chrono&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;prelude&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;diesel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ExpressionMethods&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;QueryDsl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Queryable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RunQueryDsl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;cover&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Cover&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_pooled_connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;#[derive(Debug,&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;Queryable)]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NewsRow&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;i64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Option&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NaiveDateTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cover_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;i64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;News&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;i64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Option&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NaiveDateTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cover&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Cover&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;// Here I want to have a Cover, not a cover_id&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;impl&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;News&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;news_row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NewsRow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cover&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Cover&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;News&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;// Too much cloning? Maybe, I am not sure... &lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;News&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;news_row&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;news_row&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.content&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.clone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;news_row&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.date&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.clone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;news_row&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.title&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.clone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;cover&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cover&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.clone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_latest_news&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Vec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;News&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;schema&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cover&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;schema&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;news&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;connection&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;*&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get_pooled_connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;nn&quot;&gt;news&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;.inner_join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;cover&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;.limit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;.order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;news&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.desc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
        &lt;span class=&quot;py&quot;&gt;.load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NewsRow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Cover&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;// To this point we get the result as a tuple. &lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;.expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Error loading news&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;// Another panic waiting to happen!&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;.iter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;.map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;News&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;.collect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; When doing a join, diesel returns the result as a tuple. 
This works great if your struct and your schema have the same fields in the same order. 
It it quick trickier to do it otherwise.&lt;/p&gt;

&lt;p&gt;In the &lt;a href=&quot;http://diesel.rs/guides/getting-started/&quot;&gt;diesel documentation&lt;/a&gt; the snippets often indicates &lt;code class=&quot;highlighter-rouge&quot;&gt;use schema::cover::dsl::*;&lt;/code&gt;, which I don’t like very much as it very easily creates conflicts in the names of my variables. It becomes even more confusing whene joinning tables (both are likely to have an &lt;code class=&quot;highlighter-rouge&quot;&gt;id&lt;/code&gt; column).&lt;/p&gt;

&lt;p&gt;In the snippet above I had to use two structs: &lt;code class=&quot;highlighter-rouge&quot;&gt;NewsRow&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;News&lt;/code&gt;. The reason is that Diesel does not resolve associations in the structs like an ORM like Hibernate (Java) would do. Maybe that’s for the better as a lot of the weird stuff with Hibernate happen when handling associations.&lt;/p&gt;

&lt;p&gt;I took me quite a while to wrap my head around all of that. I hope this will be useful to someone. I still feel I am just scratching the surface. Once the &lt;em&gt;I have no Idea what I’m doing&lt;/em&gt; step is over, it is quite enjoyable to use as like many things in rust: if it compile it is likely to work.&lt;/p&gt;
</description>
        <pubDate>Sun, 23 Sep 2018 22:35:00 +0800</pubDate>
        <link>http://yourdomain.com/2018/09/23/diesel-rust-notes.html</link>
        <guid isPermaLink="true">http://yourdomain.com/2018/09/23/diesel-rust-notes.html</guid>
        
        
      </item>
    
      <item>
        <title>Logs analysis with OVH Logs Data Platform</title>
        <description>&lt;p&gt;OVH offers a service called “Logs Data Platform” which helps you centralizing and analyzing your logs.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;I see two main benefits using this service:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;It’s a managed service (SaaS)&lt;/li&gt;
  &lt;li&gt;It’s cheap&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The offertings starts at 1€ per month for 1GB of logs with one stream of logs and one dashboard. The data retention is of 45 days.&lt;/p&gt;

&lt;p&gt;It also allows to setup multiple users and define more fine-grained access rules even though I did not test the feature.&lt;/p&gt;

&lt;p&gt;The service allows to interact with your logs using &lt;a href=&quot;https://www.graylog.org/features&quot;&gt;Graylog&lt;/a&gt; or &lt;a href=&quot;https://www.elastic.co/products/elasticsearch&quot;&gt;Elastisearch&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So I decided to give a try to store and analyze the the logs of &lt;a href=&quot;https://inkzone.games&quot;&gt;Inkzone&lt;/a&gt;, a website I am currently working on.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;about-graylog-and-gelf-format&quot;&gt;About Graylog and GELF format&lt;/h2&gt;

&lt;p&gt;Graylog is a tool that centralize your logs in one place and make in easier to browse and analyze them.&lt;/p&gt;

&lt;p&gt;The more applications you have the more benefits you’ll get from this kind of tool. The more you have, the more log files you also have to manage with rotation and retention policy.&lt;/p&gt;

&lt;p&gt;Greylog uses a log format called &lt;a href=&quot;http://docs.graylog.org/en/2.3/pages/gelf.html&quot;&gt;GELF (Graylog Extended Lenght Format)&lt;/a&gt;. GELF differs from other log formats (like &lt;a href=&quot;https://en.wikipedia.org/wiki/Syslog&quot;&gt;syslog&lt;/a&gt;) by being a structured logging format with custom typed fields. This makes it better suited for indexing and analysis than other non structured formats.&lt;/p&gt;

&lt;h2 id=&quot;send-docker-container-logs-to-graylog&quot;&gt;Send Docker container logs to Graylog&lt;/h2&gt;

&lt;p&gt;Docker has a native &lt;a href=&quot;https://docs.docker.com/engine/admin/logging/gelf/&quot;&gt;gelf log driver&lt;/a&gt;.
If you use Docker to deploy your applications and print your logs in the standard output to print your logs you can directly send your logs to graylog by changing the log driver of your containers.&lt;/p&gt;

&lt;p&gt;In order to proceed you will need to know:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The endpoint to collect GELF logs over UDP (&lt;code class=&quot;highlighter-rouge&quot;&gt;udp://gra2.logs.ovh.com:2202&lt;/code&gt; for me)&lt;/li&gt;
  &lt;li&gt;The token for your stream&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then, run the docker container with the following configuration:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run \
  -e X-OVH-TOKEN=&quot;7982bbc4-9a66-4426-9de3-33d6eb201ed6&quot; \
  --log-driver gelf \
  --log-opt gelf-address=udp://gra2.logs.ovh.com:2202 \
  --log-opt env=X-OVH-TOKEN \
  -d busybox
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Replace &lt;code class=&quot;highlighter-rouge&quot;&gt;7982bbc4-9a66-4426-9de3-33d6eb201ed6&lt;/code&gt; by your actual Stream token.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--log-opt env=X-OVH-TOKEN&lt;/code&gt; for the gelf log driver will put the specified environment variable as a custom field in the GELF message (prefixed by an underscore &lt;code class=&quot;highlighter-rouge&quot;&gt;_&lt;/code&gt;). That’s how OVH can accept and properly route the incoming logs.&lt;/p&gt;

&lt;p&gt;It works, however the main drawback is that the logs will be made from the Docker perspective. The reported log levels are the ones from Docker, not from the java app. Docker will only consider for log levels the standard and error outputs, so you will note have the same granulary as the java logs (DEBUG, INFO, WARN, ERROR, etc.) without doing intermediate processing.&lt;/p&gt;

&lt;p&gt;If you want richer logs there are two possible approaches:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Configure and use an &lt;a href=&quot;http://docs.graylog.org/en/2.3/pages/extractors.html&quot;&gt;Extractor&lt;/a&gt; in graylog&lt;/li&gt;
  &lt;li&gt;Send logs from the Java logging framework of your choice (logback in my case)&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;send-logback-logs-to-graylog&quot;&gt;Send logback logs to Graylog&lt;/h2&gt;

&lt;p&gt;From logback you can send the logs to to Greylogs by adding a new Appender:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;configuration&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;debug=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;appender&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;STDOUT&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ch.qos.logback.core.ConsoleAppender&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;layout&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ch.qos.logback.classic.PatternLayout&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;Pattern&amp;gt;&lt;/span&gt;
        %level %logger - %msg%n
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Pattern&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/layout&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/appender&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;appender&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;GELF&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;de.siegmar.logbackgelf.GelfUdpAppender&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;graylogHost&amp;gt;&lt;/span&gt;gra2.logs.ovh.com&lt;span class=&quot;nt&quot;&gt;&amp;lt;/graylogHost&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;graylogPort&amp;gt;&lt;/span&gt;2202&lt;span class=&quot;nt&quot;&gt;&amp;lt;/graylogPort&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;layout&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;de.siegmar.logbackgelf.GelfLayout&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;staticField&amp;gt;&lt;/span&gt;X-OVH-TOKEN:7982bbc4-9a66-4426-9de3-33d6eb201ed6&lt;span class=&quot;nt&quot;&gt;&amp;lt;/staticField&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/layout&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/appender&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;root&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;level=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;INFO&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;appender-ref&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ref=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;STDOUT&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;appender-ref&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ref=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;GELF&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/root&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Replace &lt;code class=&quot;highlighter-rouge&quot;&gt;7982bbc4-9a66-4426-9de3-33d6eb201ed6&lt;/code&gt; by your actual Stream token.&lt;/p&gt;

&lt;p&gt;You’ll need to add the following dependency to you project: &lt;code class=&quot;highlighter-rouge&quot;&gt;compile 'de.siegmar:logback-gelf:1.0.4'&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;There is logback appender &lt;a href=&quot;https://github.com/mp911de/logstash-gelf&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;biz.paluch.logging:logstash-gelf&lt;/code&gt;&lt;/a&gt; that is quite popular, but I did not manage to make it work. So I went for &lt;a href=&quot;https://github.com/osiegmar/logback-gelf&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;de.siegmar:logback-gelf&lt;/code&gt;&lt;/a&gt; instead.&lt;/p&gt;
</description>
        <pubDate>Mon, 18 Dec 2017 00:40:00 +0800</pubDate>
        <link>http://yourdomain.com/2017/12/18/logs-analysis-with-ovh.html</link>
        <guid isPermaLink="true">http://yourdomain.com/2017/12/18/logs-analysis-with-ovh.html</guid>
        
        
      </item>
    
      <item>
        <title>Use Cloudflare HTTPS with Rancher and HA Proxy</title>
        <description>&lt;p&gt;I have my own personal PaaS platform that is powered by &lt;a href=&quot;https://rancher.com/rancher/&quot;&gt;Rancher&lt;/a&gt;. It consists of 3 &lt;a href=&quot;https://www.ovh.ie/vps/&quot;&gt;cheap VPS
from OVH&lt;/a&gt; and &lt;a href=&quot;https://aws.amazon.com/rds/&quot;&gt;one database hosted in AWS&lt;/a&gt;. One VPS is used to run Rancher, the two others as 
Docker hosts to be used by Rancher to run my applications.&lt;/p&gt;

&lt;p&gt;On top of that, I use &lt;a href=&quot;https://www.cloudflare.com&quot;&gt;Cloudflare&lt;/a&gt; as a &lt;a href=&quot;https://en.wikipedia.org/wiki/Name_server&quot;&gt;Name Server&lt;/a&gt; for my personal (leward.eu) domain and domains related to the apps running on my platform.&lt;/p&gt;

&lt;p&gt;Cloudflare is also enabled as an HTTP proxy for some of my services, mainly to easily enable HTTPS.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;the-setup&quot;&gt;The Setup&lt;/h2&gt;

&lt;p&gt;I have three domains I want to use:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;leward.eu&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;app-a.leward.eu&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;app-b.leward.eu&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I have three VPS servers:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Rancher&lt;/li&gt;
  &lt;li&gt;Docker Host #1&lt;/li&gt;
  &lt;li&gt;Docker Host #2&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;My domains are configured to point to all my docker hosts. The DNS records looks like this (simplified):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;;; A Records
leward.eu           A       IP_DOCKER_HOST_1
leward.eu           A       IP_DOCKER_HOST_2
platform.leward.eu  A       IP_RANCHER_HOST

;; CNAME Records
app-a.leward.eu     CNAME   leward.eu.
app-b.leward.eu     CNAME   leward.eu.

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;On &lt;strong&gt;each&lt;/strong&gt; docker Host I have an &lt;a href=&quot;https://www.digitalocean.com/community/tutorials/an-introduction-to-haproxy-and-load-balancing-concepts&quot;&gt;HA proxy&lt;/a&gt; listening on port 80 and directing the traffic to the proper Docker container based on the HTTP Host Header. This works even if the app is not on the same docker host as the HA proxy instance because &lt;a href=&quot;http://rancher.com/docs/rancher/latest/en/rancher-services/networking/&quot;&gt;Rancher handles the networking between two hosts&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The domains are managed by Cloudflare, with their HTTP proxy enabled and forcing the traffic to HTTPS.&lt;/p&gt;

&lt;p&gt;A request made to one of my application actually going throught the following layers:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;User --[HTTPS]--&amp;gt; Cloudflare --[HTTP]--&amp;gt; HA proxy --[HTTP]--&amp;gt; App
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This not perfect, but it is quite convenient and removes the hassle of having to deal myself with certificates.&lt;/p&gt;

&lt;p&gt;I would like in the future to be able to have HTTPS all the way (maybe using &lt;a href=&quot;https://letsencrypt.org/&quot;&gt;Let’s Encrypt&lt;/a&gt;):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;User --[HTTPS]--&amp;gt; HA Proxy --[HTTPS]--&amp;gt; App
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;/assets/2017-12-03-https-with-cloudflare-rancher-and-haproxy/Rancher.svg&quot;&gt;&lt;img src=&quot;/assets/2017-12-03-https-with-cloudflare-rancher-and-haproxy/Rancher.svg&quot; alt=&quot;Diagram of my personal PaaS&quot; /&gt;&lt;/a&gt;
&lt;em&gt;Diagram made with &lt;a href=&quot;https://www.draw.io&quot;&gt;draw.io&lt;/a&gt; and their amazing SVG export feature&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;When relying on &lt;a href=&quot;https://en.wikipedia.org/wiki/Round-robin_DNS&quot;&gt;Round-robin DNS&lt;/a&gt; to achieve load balancing and high-availability, it is good to use &lt;a href=&quot;https://blog.digitalocean.com/floating-ips-start-architecting-your-applications-for-high-availability/&quot;&gt;Floating IP&lt;/a&gt; addresses that you can easily map to another host.&lt;/p&gt;

&lt;h2 id=&quot;the-application-believes-it-is-accessed-through-http&quot;&gt;The Application believes it is accessed through HTTP&lt;/h2&gt;

&lt;p&gt;I have a &lt;a href=&quot;https://grails.org&quot;&gt;Grails&lt;/a&gt; application running with this configuration. And when I used the Grails &lt;code class=&quot;highlighter-rouge&quot;&gt;redirect&lt;/code&gt; method it did not work because the URL built was using HTTP and not HTTPS.&lt;/p&gt;

&lt;p&gt;The issue is that HA Proxy itself is listening in HTTP, so when forwarding the traffic in indicates it is running expose and exposed through plain HTTP.&lt;/p&gt;

&lt;p&gt;There is a trick that solved the problem: adding an &lt;code class=&quot;highlighter-rouge&quot;&gt;X-Forwarded-Port&lt;/code&gt; HTTP header at the HA Proxy level.&lt;/p&gt;

&lt;h3 id=&quot;configure-ha-proxy-with-rancher&quot;&gt;Configure HA proxy with Rancher&lt;/h3&gt;

&lt;p&gt;Custom configuration can be added to HA Proxy on Rancher. However, figuring out how to properly apply the configuration was not straightforward.&lt;/p&gt;

&lt;p&gt;Let’s say &lt;strong&gt;App B&lt;/strong&gt; is the application on which I want to correct that behavior.&lt;/p&gt;

&lt;p&gt;Then I have to add in my custom &lt;code class=&quot;highlighter-rouge&quot;&gt;haproxy.cfg&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;backend 80_app_b_leward_sg_
    http-request add-header X-Forwarded-Port 443
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;80_app_b_leward_sg_&lt;/code&gt; is a value generated by Rancher. You can verify which one Rancher has generated for your application by running a Shell into the HA Proxy container and inspect the configuration using &lt;code class=&quot;highlighter-rouge&quot;&gt;vi /etc/haproxy/haproxy.cfg&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;After the configuration being applied, my Grails app could properly perform the redirect using HTTPS.&lt;/p&gt;
</description>
        <pubDate>Sun, 03 Dec 2017 23:23:00 +0800</pubDate>
        <link>http://yourdomain.com/2017/12/03/use-cloudflare-https-with-rancher-and-ha-proxy.html</link>
        <guid isPermaLink="true">http://yourdomain.com/2017/12/03/use-cloudflare-https-with-rancher-and-ha-proxy.html</guid>
        
        
      </item>
    
      <item>
        <title>Write a user guide in a Maven project using Asciidoctor</title>
        <description>&lt;p&gt;On my current engagement for a client at &lt;a href=&quot;http://www.zenika.sg&quot;&gt;Zenika&lt;/a&gt; I work on an authentication module that is going to be used by many applications.&lt;/p&gt;

&lt;p&gt;The fact that many applications are going to rely on us makes documentation what we do quite important. So far we used Swagger in order to document our REST API thanks to &lt;a href=&quot;http://springfox.github.io/springfox/&quot;&gt;Springfox&lt;/a&gt; and some documentation that we tried to maintain in Confluence.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;our-documentation-problem&quot;&gt;Our documentation problem&lt;/h2&gt;

&lt;p&gt;The Swagger documentation overall can always be improved but it did quite a good job at documenting our API contracts and people used it quite a lot. What was lacking, however, was a proper user guide, gor users to properly understand what our authentication module is about and how to integrate with it. I had to explain the workflow to every consumer and that is far from ideal.&lt;/p&gt;

&lt;p&gt;We also lacked documentation explaining how to setup the project and all the possible configurations such as the external systems to connect to, the database configuration, the authentication flow (groovy DSL to configure authentication screens - I should write an article about this) and whether to use mocks or not.&lt;/p&gt;

&lt;p&gt;We actually to put some documentation in Confluence, but it is not easy to organize, is used by many people for different purpose. The documentation we put there was eventually behind the god and not versionned. Versionning of the documentation is useful if you have multiple deployments of the same software which could be of different versions.&lt;/p&gt;

&lt;p&gt;That’s why in the team we decided to try to tight our documentation into our codebase. So that it will follow the code evolutions, can be compiled and published automatically. From now on we can also more easily integrate documentation tasks and review as part of our Pull Requests and code reviews.&lt;/p&gt;

&lt;h2 id=&quot;implementation-of-documentation-in-code-using-asciidoctor&quot;&gt;Implementation of documentation in code using Asciidoctor&lt;/h2&gt;

&lt;p&gt;The project is a Spring project and we use Maven to build the project. It turns out that Spring themesevles write &lt;a href=&quot;http://cloud.spring.io/spring-cloud-static/spring-cloud-config/1.3.1.RELEASE/&quot;&gt;some of their documentations&lt;/a&gt; using &lt;a href=&quot;http://asciidoctor.org&quot;&gt;Asciidoctor&lt;/a&gt; and their is an &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-maven-plugin&quot;&gt;Asciidoctor Maven plugin&lt;/a&gt; available.&lt;/p&gt;

&lt;p&gt;To start with Asciidoctor on your existing Maven project add the asciidoctor plugin in your &lt;code class=&quot;highlighter-rouge&quot;&gt;pom.xml&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.asciidoctor&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;asciidoctor-maven-plugin&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.5.5&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;executions&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;execution&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;id&amp;gt;&lt;/span&gt;asciidoc-html&lt;span class=&quot;nt&quot;&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;phase&amp;gt;&lt;/span&gt;generate-resources&lt;span class=&quot;nt&quot;&gt;&amp;lt;/phase&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;goals&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;goal&amp;gt;&lt;/span&gt;process-asciidoc&lt;span class=&quot;nt&quot;&gt;&amp;lt;/goal&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/goals&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;backend&amp;gt;&lt;/span&gt;html&lt;span class=&quot;nt&quot;&gt;&amp;lt;/backend&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/execution&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/executions&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We add &lt;code class=&quot;highlighter-rouge&quot;&gt;asciidoctor-maven-plugin&lt;/code&gt; to our build and configure it to attach the generation of the documentation to the Maven &lt;code class=&quot;highlighter-rouge&quot;&gt;generate-resources&lt;/code&gt; phase. The only configuration we need to specify is that we want the documentation generated in HTML.&lt;/p&gt;

&lt;p&gt;The maven build being configured, we can now right the documentation. By default the documation as to be located under the &lt;code class=&quot;highlighter-rouge&quot;&gt;src/main/asciidoc&lt;/code&gt; directory.&lt;/p&gt;

&lt;p&gt;Then create an &lt;code class=&quot;highlighter-rouge&quot;&gt;index.adoc&lt;/code&gt; file with the following content:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-asciidoc&quot;&gt;= MyIdeas User Guide

This is a user manual for an example project.

== Introduction

This project does something.
We just haven't decided what that is yet.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To generate the documentation in HTML format, run: &lt;code class=&quot;highlighter-rouge&quot;&gt;mvn clean package&lt;/code&gt; and you should have a &lt;code class=&quot;highlighter-rouge&quot;&gt;target/generated-docs/index.html&lt;/code&gt; file generated.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/2017-08-05-write-user-guide-in-maven-project-with-asciidoctor/first-doc-generated.png&quot;&gt;&lt;img src=&quot;/assets/2017-08-05-write-user-guide-in-maven-project-with-asciidoctor/first-doc-generated.png&quot; alt=&quot;Our first generated documentation&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can already see that it comes with a neat default theme and the footer includes the generation date.&lt;/p&gt;

&lt;h2 id=&quot;tips-and-tricks&quot;&gt;Tips and tricks&lt;/h2&gt;

&lt;h3 id=&quot;include-project-version-number&quot;&gt;Include project version number&lt;/h3&gt;

&lt;p&gt;To track which version of the software the generated document it is possible to include the version of the Maven project in the header of the generated document. The &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-maven-plugin#add-version-and-build-date-to-the-header&quot;&gt;plugin’s documentation&lt;/a&gt; describes how to configure it:&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;properties&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Custom date format to be displayed --&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;lt;maven.build.timestamp.format&amp;gt;&lt;/span&gt;dd MMMM yyyy HH&lt;span class=&quot;nt&quot;&gt;&amp;lt;/maven.build.timestamp.format&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/properties&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
    ...
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;attributes&amp;gt;&lt;/span&gt;
        ...
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;revnumber&amp;gt;&lt;/span&gt;${project.version}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/revnumber&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;revdate&amp;gt;&lt;/span&gt;${maven.build.timestamp}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/revdate&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;organization&amp;gt;&lt;/span&gt;${project.organization.name}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/organization&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/attributes&amp;gt;&lt;/span&gt;
    ...
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;/assets/2017-08-05-write-user-guide-in-maven-project-with-asciidoctor/doc-with-version-number.png&quot;&gt;&lt;img src=&quot;/assets/2017-08-05-write-user-guide-in-maven-project-with-asciidoctor/doc-with-version-number.png&quot; alt=&quot;Maven version number in the header&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;include-code-snippets-from-actual-code&quot;&gt;Include code snippets from actual code&lt;/h3&gt;

&lt;p&gt;You can also link actual code snippets from the project without having to copy them. This means your documentation never get out of sync if a code example change.&lt;/p&gt;

&lt;p&gt;First, define the &lt;code class=&quot;highlighter-rouge&quot;&gt;sourcedir&lt;/code&gt; attribute in order to inscruct the plugin where to look for source code:&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;attributes&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;sourcedir&amp;gt;&lt;/span&gt;${project.build.sourceDirectory}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/sourcedir&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/attributes&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then in your documentation you can use this reference to include code snippets:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-asciidoc&quot;&gt;== Code from the project

[source,java]
.Java code from project
----
include::{sourcedir}/eu/leward/asciidocdemo/IdeaController.java[tags=class]
----
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Noticed the &lt;code class=&quot;highlighter-rouge&quot;&gt;[tags=class]&lt;/code&gt;? The brackets after the file you want to include give more details about how the inclusion should be done. Here we don’t want to show the whole file as we are not interested in the java imports.&lt;/p&gt;

&lt;p&gt;In order to extract a subset of the file you can put tags in the source code:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;leward&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;asciidocdemo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.web.bind.annotation.RestController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// tag::class[]&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@RestController&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;IdeaController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// end::class[]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;By leaving the brackets empty you can display the whole file&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-asciidoc&quot;&gt;include::{sourcedir}/eu/leward/asciidocdemo/IdeaController.java[]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&quot;/assets/2017-08-05-write-user-guide-in-maven-project-with-asciidoctor/doc-with-code-snippet.png&quot;&gt;&lt;img src=&quot;/assets/2017-08-05-write-user-guide-in-maven-project-with-asciidoctor/doc-with-code-snippet.png&quot; alt=&quot;Documentation with code snippet from the actual project source code&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A good usecases would be to have in the documentation some snippets that are unit tests. They are often short example and the project will benefits from the automatic tests.&lt;/p&gt;

&lt;h2 id=&quot;about-the-asciidoc-syntax&quot;&gt;About the Asciidoc syntax&lt;/h2&gt;

&lt;p&gt;The Asciidoc syntax is, like Markdown, lightweight and aims at making the document written in Asciidoc easily readable without beiing processed or converted.&lt;/p&gt;

&lt;p&gt;When using Asciidoctor, a lot of the syntax elements &lt;a href=&quot;http://asciidoctor.org/docs/asciidoc-syntax-quick-reference/#markdown-compatibility&quot;&gt;are the same as in markdown&lt;/a&gt; such as headings, paragraphs, formatting, links, images, source code, etc.&lt;/p&gt;

&lt;p&gt;However there are some differences and more important Asciidoc comes more possibilities in its syntax than regular Markdown or even GitHub flavoured markdown.&lt;/p&gt;

&lt;p&gt;You can find a &lt;a href=&quot;http://asciidoctor.org/docs/asciidoc-syntax-quick-reference/&quot;&gt;reference of Asciidoc syntax on the official documentation&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;links&quot;&gt;Links&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/Leward/swagger-asciidoc-demo&quot;&gt;Examples used in this article on Github&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://asciidoctor.org/docs/asciidoc-syntax-quick-reference/&quot;&gt;AsciiDoc Syntax Quick Reference&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://asciidoctor.org&quot;&gt;Asciidoctor website&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-maven-plugin&quot;&gt;Asciidoctor Maven plugin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 05 Aug 2017 14:24:00 +0800</pubDate>
        <link>http://yourdomain.com/2017/08/05/write-user-guide-maven-project-with-asciidoctor.html</link>
        <guid isPermaLink="true">http://yourdomain.com/2017/08/05/write-user-guide-maven-project-with-asciidoctor.html</guid>
        
        
      </item>
    
      <item>
        <title>My first PCN ride in Singapore</title>
        <description>&lt;p&gt;I recently received my 
 &lt;a href=&quot;/2016/07/16/my-new-bike-triban-540.html&quot;&gt;bicycle&lt;/a&gt;
 from France. Almost a month without riding my legs urged me to have a ride.&lt;/p&gt;

&lt;p&gt;I needed to buy a few stuff for my bike, as I left some of bike equipments to a colleague in France.  So I decided to have a ride to one of the &lt;a href=&quot;https://www.decathlon.sg/content/465_store-locations&quot;&gt;Singapore’s Decathlon store&lt;/a&gt;. Then, let’s ride to the City Square Mall!&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;I basically had two options:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Have a gentle ride using the PCN (Park Connectors Network)&lt;/li&gt;
  &lt;li&gt;Rush to my destination via the main road&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;the-pcn-ride&quot;&gt;The PCN Ride&lt;/h2&gt;

&lt;p&gt;To go to City Square Mall I relied on my Garmin on which I just installed the Singapore Map thanks to &lt;a href=&quot;http://garmin.openstreetmap.nl&quot;&gt;nice Dutch Garmin map export tool&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Generally my GPS will make small detours if it can find a safer and more bicycle friendly route. Which, in my case, led me to mainly using the PCN as the GPS saw it as pretty nice, direct, dedicated and connected routes. It indeed sounds like the perfect route.&lt;/p&gt;

&lt;p&gt;I &lt;a href=&quot;/assets/2017-01-15-first-pcn-ride-in-singapore/deviation-got-lost-serangoon-pcn.png&quot;&gt;got lost&lt;/a&gt; at some point. Ok that one is enterily my fault, I should’t have thought I was more clever than the GPS.&lt;/p&gt;

&lt;p&gt;Overall, this was a pleasant ride with almost no moments which I had to share my path with cars. As you get to go though some parks (hence the name Park Connector) I experiences quite nice greeneries.&lt;/p&gt;

&lt;p&gt;Although I enjoyed my ride, there are a few things which I thing are worth mentioning.&lt;/p&gt;

&lt;h3 id=&quot;works-and-deviation&quot;&gt;Works and deviation&lt;/h3&gt;

&lt;p&gt;There were some heavy works going on the &lt;a href=&quot;https://www.nparks.gov.sg/gardens-parks-and-nature/park-connector-network/sungei-serangoon-pc&quot;&gt;Seragoon Park Connector&lt;/a&gt;. 
The good thing is that an &lt;a href=&quot;/assets/2017-01-15-first-pcn-ride-in-singapore/deviation-got-lost-serangoon-pcn.png&quot;&gt;alternate route&lt;/a&gt; was proposed to the cyclist and it was quite easy to follow. 
However as I traveled though the Deviation my GPS went berserk: “&lt;em&gt;Calculating new Route…&lt;/em&gt;”, “&lt;em&gt;Make U-turn&lt;/em&gt;”, “&lt;em&gt;Turn left&lt;/em&gt;”.&lt;/p&gt;

&lt;p&gt;When planning a route, you may not foresee these deviations. 
I my case the indications were easy to follow. 
I don’t know how it generally is.&lt;/p&gt;

&lt;h3 id=&quot;paths-are-mostly-shared-paths&quot;&gt;Paths are mostly shared paths&lt;/h3&gt;

&lt;p&gt;Most of the paths are shared with pedestrians. 
The parks connectors have dedicated paths and paths that are actually a sidewalk. The sidewalks ones are not the nicest as they are quite narrow and you get to encourer pedestrians and bus stops on them. 
During the week-end it can get quite crowded and you’d need to carefully overtake pedestrians while minding for the oncoming cyclists and pedestrians. 
I guess for a morning ride during the week-end this is much more quiet.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/2017-01-15-first-pcn-ride-in-singapore/serangoon park connector.jpg&quot;&gt;&lt;img src=&quot;/assets/2017-01-15-first-pcn-ride-in-singapore/serangoon park connector_mini.jpg&quot; alt=&quot;View Serangoon PCN&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;A view on the Serangoon PCN. Picture by &lt;a href=&quot;http://j0035001-2.blogspot.sg/2013/06/singapore-punggol-park-march-2013.html&quot;&gt;George&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;A funny thing is that when I saw dedicated and segragated paths for cyclists and pedestrians, they kind of liked using the cycling path instead of the pedestrian’s.&lt;/p&gt;

&lt;h3 id=&quot;the-dreaded-overpass-and-underpass&quot;&gt;The dreaded overpass and underpass&lt;/h3&gt;

&lt;p&gt;You know the weather is Singapore is hot and humid. When you start riding we can enjoy a breeze of refreshing air. 
This is really enjoyable until you meet with an over or underpass on which you cannot physically ride (stairs) or on which you are not allowed to ride (or risk a S$1000 fine).&lt;/p&gt;

&lt;p&gt;The thing it that you will start sweating even though if you tried to pace yourself and having to carry the bicycle on the bicycle makes things worst.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/2017-01-15-first-pcn-ride-in-singapore/spiral-bridge-pie.jpg&quot;&gt;&lt;img src=&quot;/assets/2017-01-15-first-pcn-ride-in-singapore/spiral-bridge-pie.jpg&quot; alt=&quot;A spirale bridge to be build&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The overal trip from Buangkok to City Square mall &lt;strong&gt;took me 1h19m for a distance of 17.6km&lt;/strong&gt;. 
It should have been quicker as I didn’t know the way. 
I think the ride could have been 10 minutes shorter without increasing my pace by… well… not geting lost.&lt;/p&gt;

&lt;h2 id=&quot;the-way-back-home&quot;&gt;The way back home&lt;/h2&gt;

&lt;p&gt;Even if I enjoyed my ride on the PCN the night fell and I wanted to go home faster. 
Also, I wanted to avoid the overpass and underpass I met before. 
I opened the map on my phone and decided to go for the most direct options, via the main roads. 
I used to ride long distances and in the traffic in Paris, I guess it shouldn’t be too bad.&lt;/p&gt;

&lt;p&gt;I always keep going straightforward, I don’t use my GPS for the navigation. 
I have quite a good pace, I ride around 30km/h which makes it easy to move within the traffic.
I see the MRT stations on my way: Boon Keng, Potong Pasir, Serangoon… I am already at Serangoon that was quick!&lt;/p&gt;

&lt;p&gt;Actually I had more fun riding the way back. Probably because of the adrenaline. 
I like pushing myself and arrived completely sweaty at home.
However I didn’t really took the time to enjoy the scenery although I saw a few nice buildings on my way.&lt;/p&gt;

&lt;p&gt;It took me 35 minutes to get home. Still longer than using the MRT, but 10 extra minutes for a decent workout and some fun is definitely worth it.
Even though I was constantly riding around 30km/h, my average speed is only of 18km/h.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/2017-01-15-first-pcn-ride-in-singapore/city_square_to_buangkok_speed_graph.png&quot;&gt;&lt;img src=&quot;/assets/2017-01-15-first-pcn-ride-in-singapore/city_square_to_buangkok_speed_graph.png&quot; alt=&quot;Speed graph between&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also on my way I met a fellow cyclist. I couldn’t be helped, I had to speed in order to join him. 
I overtook him, then he overtook me again. We greeted each other at the traffic light and continue a bit together. 
That’s soemthing I love about bicycle, it triggers chats and exchanges with fellow riders. 
You definitely wouldn’t do that in a car or on the MRT: “&lt;em&gt;Oh so you take the yellow line, me too, how awesome!&lt;/em&gt;”.&lt;/p&gt;

&lt;p&gt;The presence of bus lane made this ride quite enjoyable, because you have to worry less about the traffic having to overtake you. 
There are much less buses to take care of than cars.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;The PCN network is a very good idea and do wonders when they are made of dedicated and wide paths. However a full ride away of the traffic is not always possible and sometimes makes big detours unavoidable.&lt;/p&gt;

&lt;p&gt;If you are more in a hurry you can ride in the traffic on the main ride, most of them can be used by bike (exceptions being some tunnels and all the expressways). However Singapore’s street are wide with often fast moving traffic which makes the experience to be quite intimidating. The good side is that you ride for sport there are good stretch of roads to practice.&lt;/p&gt;

&lt;h2 id=&quot;links&quot;&gt;Links&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://jnhiew.blogspot.sg/2014/12/cycling-map-in-singapore.html&quot;&gt;Unofficial Singapore cycling maps with good annotations&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=0fr8qgqPkjQ&quot;&gt;The Strait Times: Cycling from Clementi to the CBD&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=9ZjpR3tuRYA&quot;&gt;An old fashioned video showing the Serangoon Park Connector&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://j0035001-2.blogspot.sg&quot;&gt;Goerge’s Blog featuring photos of the different Park Connectors&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 15 Jan 2017 18:23:00 +0800</pubDate>
        <link>http://yourdomain.com/2017/01/15/my-first-pcn-ride-in-singapore.html</link>
        <guid isPermaLink="true">http://yourdomain.com/2017/01/15/my-first-pcn-ride-in-singapore.html</guid>
        
        
      </item>
    
      <item>
        <title>私　の　あたらしい　じてんしゃ</title>
        <description>&lt;p&gt;あたらしいじてんしゃがひつようだか。&lt;/p&gt;

&lt;p&gt;いいえとはい。わかりません。&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;&lt;a href=&quot;/2016/07/16/my-new-bike-triban-540.html&quot;&gt;英語での記事&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Sat, 16 Jul 2016 02:57:00 +0800</pubDate>
        <link>http://yourdomain.com/2016/07/16/%E7%A7%81%E3%81%AE%E3%81%82%E3%81%9F%E3%82%89%E3%81%97%E3%81%84%E3%81%98%E3%81%A6%E3%82%93%E3%81%97%E3%82%83.html</link>
        <guid isPermaLink="true">http://yourdomain.com/2016/07/16/%E7%A7%81%E3%81%AE%E3%81%82%E3%81%9F%E3%82%89%E3%81%97%E3%81%84%E3%81%98%E3%81%A6%E3%82%93%E3%81%97%E3%82%83.html</guid>
        
        
      </item>
    
  </channel>
</rss>
